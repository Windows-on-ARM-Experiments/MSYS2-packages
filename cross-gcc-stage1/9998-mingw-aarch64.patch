--- a/configure
+++ b/configure
@@ -3510,6 +3510,9 @@ case "${target}" in
   ia64*-*-*vms*)
     noconfigdirs="$noconfigdirs target-libffi"
     ;;
+  aarch64-*-mingw*)
+    noconfigdirs="$noconfigdirs target-libffi"
+    ;;
   i[3456789]86-w64-mingw*)
     noconfigdirs="$noconfigdirs target-libffi"
     ;;
--- a/configure.ac
+++ b/configure.ac
@@ -769,6 +769,9 @@ case "${target}" in
   ia64*-*-*vms*)
     noconfigdirs="$noconfigdirs target-libffi"
     ;;
+  aarch64-*-mingw*)
+    noconfigdirs="$noconfigdirs target-libffi"
+    ;;
   i[[3456789]]86-w64-mingw*)
     noconfigdirs="$noconfigdirs target-libffi"
     ;;
--- a/fixincludes/configure
+++ b/fixincludes/configure
@@ -4816,6 +4816,7 @@ else
 	i?86-*-msdosdjgpp* | \
 	i?86-*-mingw32* | \
 	x86_64-*-mingw32* | \
+	aarch64-*-mingw32* | \
 	*-*-beos* | \
         *-*-*vms*)
 		TARGET=twoprocess
--- a/fixincludes/configure.ac
+++ b/fixincludes/configure.ac
@@ -52,6 +52,7 @@ fi],
 	i?86-*-msdosdjgpp* | \
 	i?86-*-mingw32* | \
 	x86_64-*-mingw32* | \
+	aarch64-*-mingw32* | \
 	*-*-beos* | \
         *-*-*vms*)
 		TARGET=twoprocess
--- a/libgcc/config/aarch64/t-cygming
+++ b/libgcc/config/aarch64/t-cygming
@@ -0,0 +1,17 @@
+# If we are building next to winsup, this will let us find the real
+# limits.h when building libgcc2.  Otherwise, winsup must be installed
+# first.
+LIBGCC2_INCLUDES = -I$(srcdir)/../winsup/w32api/include
+
+CUSTOM_CRTSTUFF = yes
+
+crtbegin.o: $(srcdir)/config/aarch64/cygming-crtbegin.c
+	$(crt_compile) -fno-omit-frame-pointer  -c $<
+
+crtbeginS.o: $(srcdir)/config/aarch64/cygming-crtbegin.c
+	$(crt_compile) -fno-omit-frame-pointer  -c $< -DCRTSTUFFS_O
+
+# We intentionally use a implementation-reserved init priority of 0,
+# so allow the warning.
+crtend.o: $(srcdir)/config/aarch64/cygming-crtend.c
+	$(crt_compile) -fno-omit-frame-pointer -Wno-error -c $<
--- a/gcc/config/aarch64/cygming.h
+++ b/gcc/config/aarch64/cygming.h
@@ -98,21 +98,12 @@ extern void aarch64_pe_begin_epilogue (FILE *file);
 #define TARGET_OS_CPP_BUILTINS()                                 \
   do                                                            \
     {                                                           \
-      builtin_define ("__MSVCRT__");                            \
-      builtin_define ("__MINGW32__");                           \
-      builtin_define ("_WIN32");                                \
       builtin_define ("__SEH__");                               \
-      builtin_define_std ("WIN32");                             \
-      builtin_define_std ("WINNT");                             \
-      builtin_define_with_int_value ("_INTEGRAL_MAX_BITS",      \
-				     TYPE_PRECISION (intmax_type_node));\
-      builtin_define ("__MINGW64__");                       \
-      builtin_define_std ("WIN64");                         \
-      builtin_define ("_WIN64");                            \
       builtin_define ("__stdcall=__attribute__((__stdcall__))");      \
       builtin_define ("__fastcall=__attribute__((__fastcall__))");    \
       builtin_define ("__thiscall=__attribute__((__thiscall__))");    \
       builtin_define ("__cdecl=__attribute__((__cdecl__))");          \
+      EXTRA_OS_CPP_BUILTINS (); \
     }                                                           \
   while (0)
 
