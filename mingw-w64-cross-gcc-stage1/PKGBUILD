# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=gcc
_base_ver=15.0.0
_mingw_suff=mingw-w64-cross
pkgname=("${_mingw_suff}-${_realname}-stage1")
provides=("${_mingw_suff}-${_realname}")
pkgver=15.0.0
pkgrel=1
pkgdesc="Cross GCC for the MinGW-w64 (stage1)"
arch=('aarch64' 'i686' 'x86_64')
url="https://gcc.gnu.org"
license=('GPL' 'LGPL' 'FDL' 'custom')
msys2_references=(
  'archlinux: gcc'
)
groups=("${_mingw_suff}-toolchain" "${_mingw_suff}")
depends=("zlib" "mpc" "isl" "libzstd"
         "${_mingw_suff}-binutils"
         "${_mingw_suff}-headers")
makedepends=("git" "gcc" 'lndir' "gmp-devel" "mpc-devel" "zlib-devel" "isl-devel" 'autotools' 'gperf' 'libzstd-devel')
#checkdepends=('dejagnu')
options=('!strip' 'staticlibs' '!emptydirs' '!buildflags')
source=("${_realname}"::"git+https://github.com/Windows-on-ARM-Experiments/gcc-woarm64.git#branch=woarm64"
        0001-Cygwin-use-SysV-ABI-on-x86_64.patch
        0002-Cygwin-add-dummy-pthread-tsaware-and-large-address-a.patch
        0003-Cygwin-handle-dllimport-properly-in-medium-model-V2.patch
        0004-Cygwin-MinGW-skip-test.patch
        0005-Cygwin-define-RTS_CONTROL_ENABLE-and-DTR_CONTROL_ENA.patch
        0006-Cygwin-fix-some-implicit-declaration-warnings-and-re.patch
        0007-Cygwin-__cxa-atexit.patch
        0008-Cygwin-libgomp-soname.patch
        0009-Cygwin-g-time.patch
        0010-Cygwin-newlib-ftm.patch
        0011-Cygwin-define-STD_UNIX.patch
        0101-Cygwin-enable-libgccjit-not-just-for-MingW.patch
        0102-Cygwin-testsuite-fixes-for-libgccjit.patch
        0950-11.2.0-configure-msys2.patch
        0951-11.2.0-msys2-spec.patch
        0953-11.2.0-testsuite-msys2.patch
        0006-Windows-New-feature-to-allow-overriding.patch
        0012-Handle-spaces-in-path-for-default-manifest.patch
        0014-gcc-9-branch-clone_function_name_1-Retain-any-stdcall-suffix.patch
        0020-libgomp-Don-t-hard-code-MS-printf-attributes.patch
        0200-add-m-no-align-vector-insn-option-for-i386.patch
        9950-11.2.0-configure-msys2-aarch64.patch
        9951-11.2.0-msys2-spec-aarch64.patch
        9999-workarounds.patch)
sha256sums=('SKIP'
            'bc788aa466a83184d285cc2f6c1ffc40c6ed416dd08c6999015262a53f1ab1b5'
            '704acfaeb11d24d3fe5aab34bc883c184ca93aff03d752016c9a50fdd82c5655'
            'c5676fd62d5f7f69be26062b95d42ef47f28151af83b83efa3998ecd8e939e19'
            '03ecf29419119286ebcef35864f9bd26d3bf3eaa355945856953204ed727e173'
            '06214859ae4030ce30bb68aa35aa4a9ac92d1e79e34133089dcbfeb7cc8066e8'
            'SKIP'
            'e27f82af1eb7a4aad955ec36d5fd7d9a4c24575845bcf718372df9bc2b099eb6'
            'de5692673731f90b888bf301a547481ab8e3cc0029713b6fd5abaabd860250f0'
            'SKIP'
            '2658eb376f7829179963978b69a048ed105a41508adc55d0fc0d607c14181926'
            '83b6aea4a462ae80121fd68d42c6234d02e20865132197a10575bbf95fd33b7e'
            'SKIP'
            '3707b0aab99b203cbd9e513be46c7d4600de06e6c8344160b7fb1779061d08da'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'e98805ead7d78ee2a92f237894c4b2b7ddc1688e1b517d8c04f28d440202e40f'
            'fd9bdecb2bbc4796bbc9f00b708dac42ef9e3464a06d6d27e5475cee117de5be'
            'ad1f7b5e7afaaec008b7cbd14feea13a10989fa91bda7003af72d457619bb199'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

_threads="win32"
_targets="aarch64-w64-mingw32 x86_64-w64-mingw32"

apply_patch_with_msg() {
  for _fname in "$@"
  do
    msg2 "Applying ${_fname}"
    patch -Nbp1 -F0 --verbose -i "${srcdir}"/${_fname}
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ] || [ -d $_fname ]; then
      rm -rf $_fname
    fi
  done
}

pkgver() {
  cd "${srcdir}/${_realname}"

  printf "%s.r%s.%s" "${_base_ver}" "$(git rev-list --count HEAD)" "$(git rev-parse --short=12 HEAD)"
}

prepare() {
  cd ${srcdir}/${_realname}

  # Remove files created by patches
  del_file_exists \
    gcc/config/i386/msys.h \
    gcc/config/i386/msys-w64.h \
    gcc/config/i386/t-msys-w64 \
    libgcc/config/i386/t-msys \
    libgomp/config/cygwin/plugin-suffix.h

  # Cygwin patches
  apply_patch_with_msg \
    0001-Cygwin-use-SysV-ABI-on-x86_64.patch \
    0002-Cygwin-add-dummy-pthread-tsaware-and-large-address-a.patch \
    0003-Cygwin-handle-dllimport-properly-in-medium-model-V2.patch \
    0004-Cygwin-MinGW-skip-test.patch \
    0005-Cygwin-define-RTS_CONTROL_ENABLE-and-DTR_CONTROL_ENA.patch \
    0006-Cygwin-fix-some-implicit-declaration-warnings-and-re.patch \
    0007-Cygwin-__cxa-atexit.patch \
    0008-Cygwin-libgomp-soname.patch \
    0009-Cygwin-g-time.patch \
    0010-Cygwin-newlib-ftm.patch \
    0011-Cygwin-define-STD_UNIX.patch \
    0101-Cygwin-enable-libgccjit-not-just-for-MingW.patch \
    0102-Cygwin-testsuite-fixes-for-libgccjit.patch

  # MSYS2 Patches
  apply_patch_with_msg \
    0950-11.2.0-configure-msys2.patch \
    0951-11.2.0-msys2-spec.patch \
    0953-11.2.0-testsuite-msys2.patch

  # MinGW Patches
  apply_patch_with_msg \
    0006-Windows-New-feature-to-allow-overriding.patch \
    0012-Handle-spaces-in-path-for-default-manifest.patch \
    0014-gcc-9-branch-clone_function_name_1-Retain-any-stdcall-suffix.patch \
    0020-libgomp-Don-t-hard-code-MS-printf-attributes.patch \
    0200-add-m-no-align-vector-insn-option-for-i386.patch \
    9950-11.2.0-configure-msys2-aarch64.patch \
    9951-11.2.0-msys2-spec-aarch64.patch \
    9999-workarounds.patch
}

build() {
  export lt_cv_deplibs_check_method='pass_all'
  for _target in ${_targets}; do
    mkdir -p ${srcdir}/gcc-build-${_target} && cd ${srcdir}/gcc-build-${_target}

    case "${_target}" in
      x86_64*)
        local _conf="--with-arch=nocona --with-tune=generic"
      ;;

      aarch64*)
        local _conf="--with-arch=armv8.1-a --with-tune=cortex-x1"
      ;;
    esac

    ../${_realname}/configure \
      --prefix=/opt \
      --build=${CHOST} \
      --host=${CHOST} \
      --target=${_target} \
      --libexecdir=/opt/lib \
      --enable-languages=c \
      --enable-static \
      --disable-shared \
      --disable-bootstrap \
      --disable-multilib \
      --disable-plugins \
      --disable-isl-version-check \
      --disable-rpath \
      --disable-win32-registry \
      --disable-werror \
      --disable-symvers \
      --disable-libatomic \
      --disable-libssp \
      --disable-libquadmath \
      --disable-nls \
      --with-system-zlib \
      --with-gnu-as \
      --with-gnu-ld \
      --without-headers \
      ${_conf} \
      CFLAGS="-O2 -pipe" \
      CXXFLAGS="-O2 -pipe"

    make all
  done
}

package() {
  for _target in ${_targets}; do
    cd ${srcdir}/gcc-build-${_target}
    make -j1 DESTDIR=${pkgdir} install
    for _f in ${pkgdir}/opt/bin/*.exe; do
      strip -s ${_f}
    done
    for _f in ${pkgdir}/opt/lib/gcc/${_target}/${_base_ver}/*.exe; do
      strip -s ${_f}
    done
    rm -rf ${pkgdir}/opt/share
  done
}
