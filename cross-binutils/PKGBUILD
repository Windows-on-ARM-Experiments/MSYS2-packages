_realname=cross-binutils
_base_ver=2.42
pkgname=${_realname}
pkgver=2.41.r114988.7769ac2cd3
pkgrel=1
pkgdesc="A set of programs to assemble and manipulate binary and object files"
arch=('aarch64' 'i686' 'x86_64')
url="https://www.gnu.org/software/binutils/"
license=('GPL')
depends=('libiconv' 'libintl' 'zlib')
provides=('cross-binutils')
checkdepends=('dejagnu' 'bc')
makedepends=('git' 'libiconv-devel' 'gettext-devel' 'zlib-devel' 'autotools' 'gcc')
options=('staticlibs' '!distcc')
source=("${_realname}"::"git+https://github.com/Windows-on-ARM-Experiments/binutils-woarm64.git#branch=woarm64"
        0050-bfd-Increase-_bfd_coff_max_nscns-to-65279.patch
        0100-binutils-2.37-msys2.patch
        2002-Allow-spaces-in-the-name-of-the-external-preprocesso.patch
        9100-binutils-2.37-msys2-aarch64.patch)
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')
validpgpkeys=('EAF1C276A747E9ED86210CBAC3126D3B4AE55E93'
              '3A24BC1E8FB409FA9F14371813FCEF89DD9E3C4F')

_targets="aarch64-pc-msys"
#_targets="aarch64-pc-msys i686-pc-msys x86_64-pc-msys"

apply_patch_with_msg() {
  for _fname in "$@"
  do
    msg2 "Applying ${_fname}"
    patch -Nbp1 -F0 --verbose -i "${srcdir}"/${_fname}
  done
}

pkgver() {
  cd "$srcdir/$_realname"

  printf "%s.r%s.%s" "${_base_ver}" "$(git rev-list --count HEAD)" "$(git rev-parse --short=12 HEAD)"
}

prepare() {
  cd "${srcdir}"/${_realname}

  apply_patch_with_msg \
    0050-bfd-Increase-_bfd_coff_max_nscns-to-65279.patch \
    0100-binutils-2.37-msys2.patch \
    2002-Allow-spaces-in-the-name-of-the-external-preprocesso.patch \
    9100-binutils-2.37-msys2-aarch64.patch

  # hack! - libiberty configure tests for header files using "$CPP $CPPFLAGS"
  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" libiberty/configure

  for _target in ${_targets}; do
    mkdir "${srcdir}"/build-${_target}
  done
}

build() {
  for _target in ${_targets}; do
    cd "${srcdir}"/build-${_target}

    ${srcdir}/${_realname}/configure \
      --prefix=/usr \
      --build=${CHOST} \
      --host=${CHOST} \
      --target=${_target} \
      --disable-werror \
      --disable-sim \
      --enable-64-bit-bfd \
      --enable-install-libiberty \
      --without-libiconv-prefix \
      --without-libintl-prefix \
      --with-system-zlib

    make
  done
}

check() {
  return 0
}

package() {
  for _target in ${_targets}; do
    cd "${srcdir}"/build-${_target}

    make DESTDIR=${pkgdir} install

    # Remove files provided by binutils package.
    rm -rf ${pkgdir}/usr/include
    rm -rf ${pkgdir}/usr/lib
    rm -rf ${pkgdir}/usr/share/
  done
}
