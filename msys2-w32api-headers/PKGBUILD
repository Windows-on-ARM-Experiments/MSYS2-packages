# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_base_ver=12.0.0
pkgname="msys2-w32api-headers"
pkgver=12.0.0.r0.g819a6ec2e
pkgrel=1
pkgdesc="Win32 API headers for MSYS2 32bit toolchain"
arch=('aarch64' 'i686' 'x86_64')
url="https://mingw-w64.sourceforge.io/"
license=('custom')
depends=()
makedepends=('git' 'mingw-w64-cross-gcc' 'autotools')
options=('staticlibs' '!buildflags')
source=("mingw-w64"::"git+https://github.com/Windows-on-ARM-Experiments/mingw-woarm64.git#branch=woarm64"
        "0001-Work-around-Warray-bounds-warning-for-__readfsdword-.patch"
        "9999-workarounds.patch")
sha256sums=('SKIP'
            '189dd0f614caae1428e1d3a06bc3ac436d26afd9cbdbd1a7ce58b1ee6478ff3f'
            'SKIP')
msys2_references=(
  'cygwin: w32api-runtime'
  'cpe: cpe:/a:mingw-w64:mingw-w64'
)

_targets="aarch64-w64-mingw32 x86_64-w64-mingw32"
#_targets="aarch64-w64-mingw32 i686-w64-mingw32 x86_64-w64-mingw32"

apply_patch_with_msg() {
  for _fname in "$@"
  do
    msg2 "Applying ${_fname}"
    patch -Nbp1 -F0 --verbose -i ${srcdir}/${_fname}
  done
}

pkgver() {
  cd ${srcdir}/mingw-w64
  printf "%s.r%s.%s" "${_base_ver}" "$(git rev-list --count HEAD)" "$(git rev-parse --short=12 HEAD)"
}

prepare() {
  cd ${srcdir}/mingw-w64

  apply_patch_with_msg \
    0001-Work-around-Warray-bounds-warning-for-__readfsdword-.patch \
    9999-workarounds.patch

  for _target in ${_targets}; do
    mkdir -p ${srcdir}/build-${_target}
  done
}

build() {
  for _target in ${_targets}; do
    msg "Building ${_target} ${pkgname}"

    cd ${srcdir}/build-${_target}

    prefix=/usr
    if [[ ${_target} != ${CARCH}* ]]; then
      prefix=/usr/${_target}
    fi

    unset CC CXX

    ${srcdir}/mingw-w64/mingw-w64-headers/configure \
      --prefix=${prefix} \
      --build=${CHOST} \
      --host=${_target} \
      --target=${_target} \
      --enable-sdk=all \
      --enable-w32api \
      --with-default-win32-winnt=0x601

    make
  done
}

package() {
  for _target in ${_targets}; do
    msg "Installing ${_target} ${pkgname}"

    cd ${srcdir}/build-${_target}
    make DESTDIR=${pkgdir} install
  done
}
