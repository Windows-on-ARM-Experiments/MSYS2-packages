# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Martell Malone <martellmalone@gmail.com>

_realname=headers
_base_ver=12.0.0
_mingw_suff=mingw-w64-cross
pkgname=("${_mingw_suff}-${_realname}")
provides=("${_mingw_suff}-${_realname}-git")
conflicts=("${_mingw_suff}-${_realname}-git")
replaces=("${_mingw_suff}-${_realname}-git")
pkgver=12.0.0
pkgrel=1
pkgdesc="MinGW-w64 headers for cross-compiler"
arch=('aarch64', 'i686' 'x86_64')
url="https://mingw-w64.sourceforge.io/"
license=('custom')
groups=("${_mingw_suff}-toolchain" "${_mingw_suff}")
makedepends=('git' 'autotools')
options=('!strip' '!libtool' '!emptydirs' '!buildflags')
source=("mingw-w64"::"git+https://github.com/Windows-on-ARM-Experiments/mingw-woarm64.git#branch=woarm64")
sha256sums=('SKIP')
msys2_references=(
  'archlinux: mingw-w64-headers'
  'cpe: cpe:/a:mingw-w64:mingw-w64'
)

_targets="aarch64-w64-mingw32 x86_64-w64-mingw32"
#_targets="aarch64-w64-mingw32 x86_64-w64-mingw32ucrt i686-w64-mingw32 x86_64-w64-mingw32"

pkgver() {
  cd "${srcdir}/mingw-w64"

  printf "%s.r%s.%s" "${_base_ver}" "$(git rev-list --count HEAD)" "$(git rev-parse --short=12 HEAD)"
}

prepare() {
  cd "${srcdir}/mingw-w64"

  for _target in ${_targets}; do
    mkdir -p ${srcdir}/build-${_target}
  done
}

build() {
  unset CC CXX

  for _target in ${_targets}; do
    msg "Building ${_target} ${_realname}"

    if [[ "${_target}" == "x86_64-w64-mingw32ucrt" ]]; then
      _default_msvcrt=ucrt
      _default_win32_winnt=0x603  # Windows 8.1
    else
      _default_msvcrt=msvcrt
      _default_win32_winnt=0x601  # Windows 7
    fi

    cd ${srcdir}/build-${_target}

    ${srcdir}/mingw-w64/mingw-w64-headers/configure \
      --prefix=/opt/${_target} \
      --build=${CHOST} \
      --host=${_target} \
      --target=${_target} \
      --enable-sdk=all \
      --with-default-win32-winnt=${_default_win32_winnt} \
      --with-default-msvcrt=${_default_msvcrt}
  done
}

package() {
  for _target in ${_targets}; do
    msg "Installing ${_target} headers"
    cd ${srcdir}/build-${_target}
    make DESTDIR=${pkgdir} install

    rm ${pkgdir}/opt/${_target}/include/pthread_signal.h
    rm ${pkgdir}/opt/${_target}/include/pthread_time.h
    rm ${pkgdir}/opt/${_target}/include/pthread_unistd.h
  done
}
