# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Martell Malone <martellmalone@gmail.com>

_realname=binutils
_base_ver=2.42
_mingw_suff=mingw-w64-cross
_target_archs="aarch64 x86_64"
#_target_archs="aarch64 x86_64 i686"

pkgname=("${_mingw_suff}-${_realname}")
pkgver=2.42
pkgrel=1
pkgdesc="A set of programs to assemble and manipulate binary and object files"
arch=('aarch64' 'i686' 'x86_64')
url="https://www.gnu.org/software/binutils/"
msys2_references=(
  "cpe: cpe:/a:gnu:binutils"
)
license=('GPL')
groups=("${_mingw_suff}-toolchain" "${_mingw_suff}")
depends=("libiconv" "zlib" "libzstd")
checkdepends=('dejagnu' 'bc')
makedepends=("git" "libiconv-devel" "zlib-devel" 'autotools' 'gcc' 'libzstd-devel' 'gmp-devel' 'mpfr-devel')
provides=($(for _target_arch in $_target_archs; do echo "mingw-w64-${_target_arch}-binutils"; done))

options=('staticlibs' '!distcc' '!buildflags')
source=("${_realname}"::"git+https://github.com/Windows-on-ARM-Experiments/binutils-woarm64.git#branch=woarm64"
        0002-check-for-unusual-file-harder.patch
        0010-bfd-Increase-_bfd_coff_max_nscns-to-65279.patch
        9100-mingw-aarch64.patch
        9999-workarounds.patch)
sha256sums=('SKIP'
            'SKIP'
            '4e8ac055df61b1b5d6ae29dc87e1154737c2e87c7b244b44866702cabf1a5d18'
            'SKIP'
            'SKIP')
msys2_references=(
  'archlinux: binutils'
)

_targets="aarch64-w64-mingw32 x86_64-w64-mingw32"
#_targets="aarch64-w64-mingw32 x86_64-w64-mingw32ucrt i686-w64-mingw32 x86_64-w64-mingw32"

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying ${_patch}"
    patch -Nbp1 -F0 --verbose -i ${srcdir}/${_patch}
  done
}

pkgver() {
  cd "${srcdir}/${_realname}"

  printf "%s.r%s.%s" "${_base_ver}" "$(git rev-list --count HEAD)" "$(git rev-parse --short=12 HEAD)"
}

prepare() {
  cd ${srcdir}/${_realname}

  apply_patch_with_msg \
    0002-check-for-unusual-file-harder.patch \
    0010-bfd-Increase-_bfd_coff_max_nscns-to-65279.patch \
    9100-mingw-aarch64.patch \
    9999-workarounds.patch
}

build() {
  for _target in ${_targets}; do
    mkdir -p ${srcdir}/binutils-build-${_target} && cd ${srcdir}/binutils-build-${_target}

    local _conf='--enable-lto'

    if [ "${_target}" != "i686-w64-mingw32" ]; then
     _conf+=' --enable-64-bit-bfd'
    fi

    MSYSTEM=CYGWIN
    local CYGWIN_CHOST="${CHOST/-msys/-cygwin}"
    ${srcdir}/binutils/configure \
      --build=${CYGWIN_CHOST} \
      --host=${CYGWIN_CHOST} \
      --target=${_target} \
      --prefix=/opt \
      --disable-werror \
      --with-libiconv-prefix=/usr \
      --with-system-zlib \
      $_conf

    make
  done
}

check() {
  for _target in ${_targets}; do
    cd ${srcdir}/binutils-build-${_target}

    # unset LDFLAGS as testsuite makes assumptions about which ones are active
    # do not abort on errors - manually check log files
    make LDFLAGS="" -k check || true
  done
}

package() {
  for _target in ${_targets}; do
    cd ${srcdir}/binutils-build-${_target}
    make DESTDIR=${pkgdir} install
  done
}
